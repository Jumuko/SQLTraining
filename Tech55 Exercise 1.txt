/**********************************************************************************************************************
DEVELOPER: JOHN O. UMUKORO
DATE CREATED: 2025-03-21
CODE VERSION: 1.0
DESCRIPTION: THIS CODE PROVIDES INFORMATION ABOUT COVID DATA TIME SERIES AND HOSPITAL DATASET
PROJECT SCOPE:  1: LOAD COVID DATA TIME SERIES AND HOSPITAL DATASET TO DATABASE 
				2: CREATE SQL QUERIES TO GENERATE METRICS 
				3: PRODUCE A BUSINESS INTELLIGENCE REPORT FOR EACH DATASET SHOWING DIFFERENT KPIS
**********************************************************************************************************************/

--GENERATE KPIS WITH COVID DATA TIME SERIES
SELECT *
FROM COVIDDATATIMESERIES


--TOTAL DEATH COUNT BY COUNTRY
SELECT [COUNTRY REGION],
SUM(DEATHS) AS TOTALDEATHRATE
FROM COVIDDATATIMESERIES
GROUP BY [COUNTRY REGION]


--COUNTRY WITH THE HIGHEST DEATH COUNT
SELECT TOP 1 [COUNTRY REGION],
SUM(DEATHS) AS TOTALDEATHRATE
FROM COVIDDATATIMESERIES
GROUP BY [COUNTRY REGION]
ORDER BY TOTALDEATHRATE DESC

--TOTAL DEATH COUNT IN 2020
SELECT 
SUM(DEATHS) AS [2020TOTALDEATHCOUNT]
FROM COVIDDATATIMESERIES
WHERE [DATE] LIKE '%2020'

--TOTAL DEATH COUNT IN 2021
SELECT 
SUM(DEATHS) AS [2021TOTALDEATHCOUNT]
FROM COVIDDATATIMESERIES
WHERE [DATE] LIKE '%2021'

--DEATH COUNT BY PROVINCE
SELECT PROVINCE,
SUM(DEATHS) AS DEATHCOUNT
FROM COVIDDATATIMESERIES
GROUP BY PROVINCE

--TOP 3 TOTALDEATHRATE BY PROVINCE
SELECT TOP 3 PROVINCE,
SUM(DEATHS) AS DEATHCOUNT
FROM COVIDDATATIMESERIES
GROUP BY PROVINCE
ORDER BY DEATHCOUNT DESC

--PROVINCE WITH ONE RECORD OF DEATH
SELECT PROVINCE,
SUM(DEATHS) AS DEATHCOUNT
FROM COVIDDATATIMESERIES
GROUP BY PROVINCE
HAVING SUM(DEATHS) = 1
ORDER BY DEATHCOUNT ASC

--PROVINCE WITH NO RECORD OF DEATH
SELECT PROVINCE,
SUM(DEATHS) AS DEATHCOUNT
FROM COVIDDATATIMESERIES
GROUP BY PROVINCE
HAVING SUM(DEATHS) = 0
ORDER BY DEATHCOUNT ASC



--GENERATE KPIS WITH HEALTH CARE DATASET
SELECT * FROM HEALTHCAREDATASET

--CHANGE NAME COLUMN TO UPPERCASE
UPDATE HEALTHCAREDATASET
SET NAME = upper(NAME) 


--PATIENT COUNT BY AGE
SELECT AGE,
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
GROUP BY AGE 
ORDER BY AGE ASC


--PATIENT COUNT BY MEDICAL CONDITION
CREATE VIEW VWCONDITION AS
SELECT [MEDICAL CONDITION],
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
GROUP BY [MEDICAL CONDITION] 
ORDER BY [MEDICAL CONDITION] ASC

--PATIENT COUNT BY GENDER
CREATE VIEW VWGENDER AS
SELECT GENDER,
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
GROUP BY GENDER

--PATIENT COUNT BY INSURANCE PROVIDER
SELECT [INSURANCE PROVIDER],
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
GROUP BY [INSURANCE PROVIDER]

--PATIENT COUNT BY ADMISSION TYPE
SELECT [ADMISSION TYPE],
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
GROUP BY [ADMISSION TYPE]

--MEDICATIONS DISPENSED
SELECT MEDICATION,
COUNT(MEDICATION) AS ADMINISTEREDMEDICATIONCOUNT
FROM HEALTHCAREDATASET
GROUP BY MEDICATION

--CHECKING FOR DUPLICATES
SELECT NAME,AGE,GENDER,
COUNT(*) AS DUPLICATES
FROM HEALTHCAREDATASET
GROUP BY NAME,AGE,GENDER
HAVING COUNT(*)>1

--ELIMINATE DUPLICATE RECORDS
SELECT DISTINCT NAME,AGE,GENDER
FROM HEALTHCAREDATASET

SELECT NAME,AGE,GENDER
FROM HEALTHCAREDATASET
GROUP BY NAME,AGE,GENDER

--PATIENTS MEDICAL RISK CATEGORY
CREATE VIEW VWRISKCATEGORY AS
SELECT *,
CASE WHEN [ADMISSION TYPE] ='ELECTIVE' THEN 'LOW RISK'
	 WHEN [ADMISSION TYPE] ='URGENT' THEN 'MEDIUM RISK'
	 ELSE 'HIGH RISK'
	 END AS MEDICALRISKCATEGORY
FROM HEALTHCAREDATASET

--MEDICATIONS RECOMMENDED TO PATIENTS CONDITION
--CANCER
CREATE VIEW VWCANCER AS
SELECT  TOP 1 MEDICATION,[MEDICAL CONDITION],
COUNT(MEDICATION) DISPENSED
FROM HEALTHCAREDATASET
WHERE [MEDICAL CONDITION]='CANCER'
GROUP BY MEDICATION,[MEDICAL CONDITION]
ORDER BY DISPENSED DESC
--DIABETES
CREATE VIEW VWDIABETES AS
SELECT  TOP 1 MEDICATION,[MEDICAL CONDITION],
COUNT(MEDICATION) DISPENSED
FROM HEALTHCAREDATASET
WHERE [MEDICAL CONDITION]='DIABETES'
GROUP BY MEDICATION,[MEDICAL CONDITION]
ORDER BY DISPENSED DESC
--ARTHRITIS
CREATE VIEW VWARTHRITIS AS
SELECT  TOP 1 MEDICATION,[MEDICAL CONDITION],
COUNT(MEDICATION) DISPENSED
FROM HEALTHCAREDATASET
WHERE [MEDICAL CONDITION]='ARTHRITIS'
GROUP BY MEDICATION,[MEDICAL CONDITION]
ORDER BY DISPENSED DESC
--HYPERTENSION
CREATE VIEW VWHYPERTENSION AS
SELECT  TOP 1 MEDICATION,[MEDICAL CONDITION],
COUNT(MEDICATION) DISPENSED
FROM HEALTHCAREDATASET
WHERE [MEDICAL CONDITION]='HYPERTENSION'
GROUP BY MEDICATION,[MEDICAL CONDITION]
ORDER BY DISPENSED DESC
--OBESITY
CREATE VIEW VWOBESITY AS
SELECT  TOP 1 MEDICATION,[MEDICAL CONDITION],
COUNT(MEDICATION) DISPENSED
FROM HEALTHCAREDATASET
WHERE [MEDICAL CONDITION]='OBESITY'
GROUP BY MEDICATION,[MEDICAL CONDITION]
ORDER BY DISPENSED DESC
--ASTHMA
CREATE VIEW VWASTHMA AS
SELECT  TOP 1 MEDICATION,[MEDICAL CONDITION],
COUNT(MEDICATION) DISPENSED
FROM HEALTHCAREDATASET
WHERE [MEDICAL CONDITION]='ASTHMA'
GROUP BY MEDICATION,[MEDICAL CONDITION]
ORDER BY DISPENSED DESC

--PATIENT COUNT BY AGE GROUP
--13 TO 25
SELECT 
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
WHERE AGE BETWEEN 12 AND 26
--26 TO 39
SELECT 
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
WHERE AGE BETWEEN 25 AND 40
--40 TO 59
SELECT 
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
WHERE AGE BETWEEN 39 AND 60
--60 TO 80
SELECT 
COUNT(NAME) AS NO_OF_PATIENTS
FROM HEALTHCAREDATASET
WHERE AGE BETWEEN 59 AND 81

--AVERAGE TREATMENT COST PER AGE GROUP
CREATE VIEW AVGCOSTPERAGE60TO80 AS
SELECT 
AVG([Billing Amount]) AS AvgTreatmentCost
FROM HEALTHCAREDATASET
WHERE AGE BETWEEN 59 AND 81;

CREATE VIEW AVGCOSTPERAGE40TO59 AS 
SELECT 
AVG([Billing Amount]) AS AvgTreatmentCost
FROM HEALTHCAREDATASET
WHERE AGE BETWEEN 39 AND 60;

CREATE VIEW AVGCOSTPERAGE26TO39 AS
SELECT 
AVG([Billing Amount]) AS AvgTreatmentCost
FROM HEALTHCAREDATASET
WHERE AGE BETWEEN 25 AND 40;

